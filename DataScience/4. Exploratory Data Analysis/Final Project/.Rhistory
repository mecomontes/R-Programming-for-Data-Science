skip()
skip()
library(swirl)
swirl(9)
library(swirl)
swirl()
ski()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
ski()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
# Create a plot object histogram
hist(GlobalActivePower, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
# Read and load file into a data table subseting by date 1/2/2017 - 2/2/2017
Data <- read.table("/home/meco/Desktop/Coursera/datasciencecoursera/4. Exploratory Data Analisys/household_power_consumption.txt", header = TRUE, sep = ";")
# Subsetting the data from 1/2/2007 to 2/2/2007
SubSetData <- Data[Data$Date %in% c("1/2/2007","2/2/2007") ,]
# Plot the histogram and save as png file
GlobalActivePower <- as.numeric(SubSetData$Global_active_power)
# Create a plot object histogram
hist(GlobalActivePower, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
# Create a png device
dev.copy(png, width=480, height=480, file = "plot1.png")
# Read and load file into a data table subseting by date 1/2/2017 - 2/2/2017
Data <- read.table("/home/meco/Desktop/Coursera/datasciencecoursera/4. Exploratory Data Analisys/household_power_consumption.txt", header = TRUE, sep = ";")
# Subsetting the data from 1/2/2007 to 2/2/2007
SubSetData <- Data[Data$Date %in% c("1/2/2007","2/2/2007") ,]
# Plot the graph and save as png file
datetime <- strptime(paste(SubSetData$Date, SubSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
GlobalActivePower <- as.numeric(SubSetData$Global_active_power)
# Create a plot object scatterplot
plot(datetime, GlobalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
# Create a png device
dev.copy(png, width=480, height=480, file = "plot2.png")
# convert Sub_metering variables as numeric representation
SubMetering1 <- as.numeric(SubSetData$Sub_metering_1)
SubMetering2 <- as.numeric(SubSetData$Sub_metering_2)
SubMetering3 <- as.numeric(SubSetData$Sub_metering_3)
# Create a png device
png("plot3.png", width=480, height=480)
plot(datetime, SubMetering1, type="l", xlab = "", ylab = "Energy sub metering")
lines(datetime, SubMetering2, type="l", col = "red")
lines(datetime, SubMetering3, type="l", col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 1, col = c("black", "red", "blue"))
dev.off()
dev.off()
dev.off()
# Create a plot object scatterplot
plot(datetime, GlobalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
# Create a png device
dev.copy(png, width=480, height=480, file = "plot2.png")
dev.off()
# Plot the graph and save as png file
datetime <- strptime(paste(SubSetData$Date, SubSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
GlobalActivePower <- as.numeric(SubSetData$Global_active_power)
# Create a plot object scatterplot
plot(datetime, GlobalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
# Create a png device
dev.copy(png, width=480, height=480, file = "plot2.png")
dev.off()
# Create a plot object scatterplot
plot(datetime, GlobalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
rm(list=ls())
# Subsetting the data from 1/2/2007 to 2/2/2007
SubSetData <- Data[Data$Date %in% c("1/2/2007","2/2/2007") ,]
# Read and load file into a data table subseting by date 1/2/2017 - 2/2/2017
Data <- read.table("/home/meco/Desktop/Coursera/datasciencecoursera/4. Exploratory Data Analisys/household_power_consumption.txt", header = TRUE, sep = ";")
# Subsetting the data from 1/2/2007 to 2/2/2007
SubSetData <- Data[Data$Date %in% c("1/2/2007","2/2/2007") ,]
# Plot the histogram and save as png file
GlobalActivePower <- as.numeric(SubSetData$Global_active_power)
# Create a plot object histogram
hist(GlobalActivePower, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
# Create a png device
dev.copy(png, width=480, height=480, file = "plot1.png")
dev.off()
# Read and load file into a data table subseting by date 1/2/2017 - 2/2/2017
Data <- read.table("/home/meco/Desktop/Coursera/datasciencecoursera/4. Exploratory Data Analisys/household_power_consumption.txt", header = TRUE, sep = ";")
# Subsetting the data from 1/2/2007 to 2/2/2007
SubSetData <- Data[Data$Date %in% c("1/2/2007","2/2/2007") ,]
# Plot the graph and save as png file
datetime <- strptime(paste(SubSetData$Date, SubSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
GlobalActivePower <- as.numeric(SubSetData$Global_active_power)
# Create a plot object scatterplot
plot(datetime, GlobalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
# Create a png device
dev.copy(png, width=480, height=480, file = "plot2.png")
dev.off()
# Convert Global_active_power, Voltage and Sub_metering variables as numeric representation
GlobalActivePower <- as.numeric(SubSetData$Global_active_power)
GlobalReactivePower <- as.numeric(SubSetData$Global_reactive_power)
Voltage <- as.numeric(SubSetData$Voltage)
SubMetering1 <- as.numeric(SubSetData$Sub_metering_1)
SubMetering2 <- as.numeric(SubSetData$Sub_metering_2)
SubMetering3 <- as.numeric(SubSetData$Sub_metering_3)
# Create a png device and set general plot parameter
png("plot4.png", width=480, height=480)
par(mfrow = c(2,2))
# Plot 1
plot(datetime, GlobalActivePower, type = "l", xlab = "", ylab = "Global Active Power")
# Plot 2
plot(datetime, Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
# Plot 3
plot(datetime, SubMetering1, type="l", xlab = "", ylab = "Energy sub metering")
lines(datetime, SubMetering2, type="l", col = "red")
lines(datetime, SubMetering3, type="l", col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, lwd = 1, col = c("black", "red", "blue"))
# Plot 4 that contains all the plots
plot(datetime, GlobalReactivePower, type="l", xlab = "datetime", ylab = "Global_reactive_power")
dev.off()
install.packages("mldr")
install.packages("mlr3")
install.packages("R6")
library(mlr3)
task <- tsk('german credit')
task <- tsk('german_credit')
library(mrl3learners)
install.packages("mlr3learners")
library(mlr3)
library(mlr3learners)
task <- tsk('german_credit')
learner_log_reg <- lrm('classif.log_reg', predict_type = 'prob')
learner_log_reg <- lmr('classif.log_reg', predict_type = 'prob')
learner_log_reg <- mlr('classif.log_reg', predict_type = 'prob')
learner_log_reg <- lrn('classif.log_reg', predict_type = 'prob')
learner_log_reg$train(task)
learner_log_reg$model
train_set <- sample(task$row_ids, 0.8 * task$nrow)
test$set <- setdiff(task$row_ids, train_set)
train$set <- setdiff(task$row_ids, train_set)
test_set <- setdiff(task$row_ids, train_set)
learner_log_reg$train(task, row_ids = train_set)
pred <- learner_log_reg$predict(task, row_ids = test_set)
pred$score(msr('classif.auc'))
learner_rf <- lrn('classif.ranger', predict_type = 'prob')
install.packages("ranger")
learner_rf <- lrn('classif.ranger', predict_type = 'prob')
library(swirl)
swirl()
dataFrame
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
View(dataFrame)
View(dataFrame)
View(dataMatrix)
View(dataMatrix)
View(dataMatrix)
View(dataMatrix)
View(dataMatrix)
View(dataMatrix)
View(dataMatrix)
View(dataMatrix)
View(dataFrame)
View(dataMatrix)
View(dataMatrix)
View(dataMatrix)
View(dataMatrix)
View(dataMatrix)
# Dendrogram plot
df <- data.frame(matrix(data=rnorm(24)))
View(df)
# Dendrogram plot
df <- data.frame(matrix(nrow=12, ncol=2, data=rnorm(24)))
View(df)
abline(h=1.5,col="blue")
abline(h=0.4,col="blue")
abline(h=0.4,col="red")
5
9
0
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
skip()
plot(denmt)
distmt
library(swirl)
swirl()
cmat
points(cx, cy, col=c('red', 'orange', 'purple'), pch=3, cex=2, lwd=2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
skip()
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
skip()
skip()
kmObj$iter
skip()
skip()
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch= 19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch= 19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch= 19, cex=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit('addPatt.R'')
''
myedit('addPatt.R')
source('addPatt.R', local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
skip()
svd(mat)
svd(scale(mat))
prcomp(scale(matrix(data, nrow = rows, ncol = cols)))
prcomp(scale(matrix(mat)))
prcomp(scale(mat)
)
skip()
skip()
skip()
skip()
skip()
skip()
dim(faceData)
skip()
skip()
skip()
myImage(a2)
myImage(a2)
skip()
skip()
library(swirl)
swirl()
dim(ssd)
names(ssd)
names(ssd[562:563])
table(ssd$subject)
skip()
table(ssd$activity)
sub1 <- subset(ssd, subject=1)
Type sub1 <- subset(ssd, subject == 1)
sub1 <- subset(ssd, subject == 1)
sub1
dim(sub1)
names(sub1[:12])
names(sub1[, 1:12])
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
maxCon <- which.max(svd1$v[,2])
skip()
skip()
skip()
names(sub1[maxCon])
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
library(swirl)
swir()
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cnames, '|', fixed=TRUE)
cnames <- strsplit(cnames, '|', fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
View(myedit)
head(pm0)
skip()
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(om1)
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negativena.rm=TRUE)
sum(negative, na.rm = TRUE)
mean(sum(negative, na.rm = TRUE))
mean(negative, na.rm = TRUE)
skip(9)
skip()
skip()
skip()
head(dates)
hist(dates[negatives], 'month')
hist(dates[negative], 'month')
str(site0)
skip()
skip()
skip()
skip()
skip()
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
plot(dates1, x1sub, pch=20)
abline(h=mean(pm25), lwd=2, na.rm=TRUE)
skip()
skip()
rng
skip()
str(mn0)
skip()
str(mn1)
summary(mn1)
summary(mn0)
summary(mn1)
skip()
skip()
skip()
dim(mrg)
skip()
skip()
skip()
skip()
skip()
rm(list=ls())
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
library("data.table")
# Download and unzip the dataset
path <- '/home/meco/Desktop/Coursera/datasciencecoursera/4. Exploratory Data Analisys/Final Project'
url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(url, destfile = paste(path, "dataset.zip", sep = "/"))
unzip(zipfile = "dataset.zip")
unzip(zipfile = paste(path, "dataset.zip", sep = "/"))
SCC <- data.table::as.data.table(x = readRDS(file = "Source_Classification_Code.rds"))
NEI <- data.table::as.data.table(x = readRDS(file = "summarySCC_PM25.rds"))
# Create a barplot
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
png(filename = "plot1.png", width = 480, height = 480, units = "px")
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
# Download and unzip the dataset
path <- '/home/meco/Desktop/Coursera/datasciencecoursera/4. Exploratory Data Analisys/Final Project'
setwd(path)
url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(url, destfile = paste(path, "dataset.zip", sep = "/"))
unzip(zipfile = paste(path, "dataset.zip", sep = "/"))
SCC <- data.table::as.data.table(x = readRDS(file = "Source_Classification_Code.rds"))
NEI <- data.table::as.data.table(x = readRDS(file = "summarySCC_PM25.rds"))
# Create a barplot
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
png(filename = "plot1.png", width = 480, height = 480, units = "px")
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
png(filename = "plot1.png", width = 480, height = 680, units = "px")
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
png(filename = "plot1.png", width = 600, height = 600, units = "px")
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
# Obtain the information from the dataset
SCC <- data.table::as.data.table(x = readRDS(file = "Source_Classification_Code.rds"))
NEI <- data.table::as.data.table(x = readRDS(file = "summarySCC_PM25.rds"))
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[fips=='24510', lapply(.SD, sum, na.rm = TRUE)
, .SDcols = c("Emissions")
, by = year]
# Create the device
png(filename = "plot2.png", width = 480, height = 480, units = "px")
# Create a barplot
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
# Obtain the information from the dataset
NEI <- data.table::as.data.table(x = readRDS("summarySCC_PM25.rds"))
SCC <- data.table::as.data.table(x = readRDS("Source_Classification_Code.rds"))
baltimoreNEI <- NEI[fips=="24510",]
# Create the device
png(filename = "plot3.png", width = 480, height = 480, units = "px")
# Create a barplot using ggplot
ggplot(baltimoreNEI,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
theme_bw() + guides(fill=FALSE)+
facet_grid(.~type,scales = "free",space="free") +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)")) +
labs(title=expression("PM"[2.5]*" Emissions, Baltimore City 1999-2008 by Source Type"))
dev.off()
library("ggplot2")
# Create the device
png(filename = "plot3.png", width = 480, height = 480, units = "px")
# Create a barplot using ggplot
ggplot(baltimoreNEI,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
theme_bw() + guides(fill=FALSE)+
facet_grid(.~type,scales = "free",space="free") +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)")) +
labs(title=expression("PM"[2.5]*" Emissions, Baltimore City 1999-2008 by Source Type"))
dev.off()
# Subsetting coal combustion related NEI data
combustionRelated <- grepl("comb", SCC[, SCC.Level.One], ignore.case=TRUE)
coalRelated <- grepl("coal", SCC[, SCC.Level.Four], ignore.case=TRUE)
combustionSCC <- SCC[combustionRelated & coalRelated, SCC]
combustionNEI <- NEI[NEI[,SCC] %in% combustionSCC]
# Create the device
png(filename = "plot4.png", width = 480, height = 480, units = "px")
# Create a barplot using ggplot
ggplot(combustionNEI,aes(x = factor(year),y = Emissions/10^5)) +
geom_bar(stat="identity", fill ="#FF9999", width=0.75) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
dev.off()
x <- SCC$SCC.Level.Two
vehiclesSCC <- SCC[grepl("vehicle", x, ignore.case=TRUE), SCC]
vehiclesNEI <- NEI[NEI[, SCC] %in% vehiclesSCC,]
# Subsetting vehicles NEI data Baltimore
baltimoreVehiclesNEI <- vehiclesNEI[fips=="24510",]
# Create the device
png(filename = "plot5.png", width = 480, height = 480, units = "px")
# Create a barplot using ggplot
ggplot(baltimoreVehiclesNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity", fill ="#FF9999" ,width=0.75) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
dev.off()
# Subsetting of the NEI data which corresponds to vehicles
condition <- grepl("vehicle", SCC[, SCC.Level.Two], ignore.case=TRUE)
vehiclesSCC <- SCC[condition, SCC]
vehiclesNEI <- NEI[NEI[, SCC] %in% vehiclesSCC,]
# Subsetting the vehicles NEI data by each city's fip and add city name.
vehiclesBaltimoreNEI <- vehiclesNEI[fips == "24510",]
vehiclesBaltimoreNEI[, city := c("Baltimore City")]
vehiclesLANEI <- vehiclesNEI[fips == "06037",]
vehiclesLANEI[, city := c("Los Angeles")]
# Combining data.tables into one data.table
bothNEI <- rbind(vehiclesBaltimoreNEI,vehiclesLANEI)
# Create the device
png(filename = "plot6.png", width = 480, height = 480, units = "px")
# Create a barplot using ggplot
ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(scales="free", space="free", .~city) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
dev.off()
